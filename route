import Vue from 'vue';
import VueRouter from 'vue-router';
import store from '../store';
Vue.use(VueRouter);
const routes = [
  {
    path: '/',
    name: 'home',
    meta: { auth: true },
    component: () => import('@/views/Home.vue')
  },
  {
    path: '/auth',
    name: 'auth',
    redirect: '/auth/login'
  },
  { path: '/auth/login',
    name: 'auth.login', 
    component: () => import('@/views/auth/Login.vue') 
  },
  {
    path: '/auth/forget-password',
    component: () => import('@/views/auth/ForgetPassword.vue'),
    name: 'auth.password.forget'
  },
  {
    path: '/auth/reset-password',
    component: () => import('@/views/auth/ResetPassword.vue'),
    name: 'auth.password.reset'
  },
  {
    path: '/cra',
    name: 'cra',
    meta: { auth: true },
    component: () => import('@/views/cra/Cra.vue')
  },
  {
    path: '/admin',
    name: 'admin',
    meta: { auth: true, admin: true },
    component: () => import('@/views/admin/Admin.vue')
  },
  {
    path: '/admin/craNotEntered',
    meta: { auth: true, admin: true },
    component: () => import('@/components/RouterComponent.vue'),
    children: [
      { 
        name: 'admin.craNotEntered.list',
        path: '',
        component: () => import('@/views/admin/craNotEntered/craNotEnteredList/craNotEnteredList.vue') 
      },
      {
        name: 'admin.craNotEntered.detail',
        path: 'detail/:id',
        component: () => import('@/views/admin/craNotEntered/craNotEnteredDetail/craNotEnteredDetail.vue')
      }
    ]
  },
  { 
    path: '/admin/projects', 
    meta: { auth: true, admin: true }, 
    component: () => import('@/components/RouterComponent.vue'),
    children: [
      { 
        name: 'admin.projects.list',
        path: '', 
        component: () => import('@/views/admin/projects/ProjectsList.vue') 
      },
      {
        name: 'admin.projects.create',
        path: 'create',
        component: () => import('@/views/admin/projects/ProjectsCreationForm.vue')
      },
      {
        name: 'admin.projects.update',
        path: 'update/:id',
        component: () => import('@/views/admin/projects/ProjectsUpdateForm.vue')
      }
    ]
  },
  {
    path: '/admin/collaborateurs', 
    meta: { auth: true, admin: true },
    component: () => import('@/components/RouterComponent.vue'),
    children: [
      { 
        name: 'admin.collaborateurs.list',
        path: '',
        component: () => import('@/views/admin/collaborateurs/CollaborateursList.vue')
      },
      {
        name: 'admin.collaborateurs.create',
        path: 'create',
        component: () => import('@/views/admin/collaborateurs/CollaborateursCreationForm.vue')
      },
      {
        name: 'admin.collaborateurs.update',
        path: 'update/:id',
        component: () => import('@/views/admin/collaborateurs/CollaborateursUpdateForm.vue')
      }
    ]
  },
  {
    path: '/profile',
    component: () => import('@/components/RouterComponent'),
    meta: { auth: true },
    children: [
      { path: '', name: 'profile', component: () => import('@/views/profile/Profile') },
      { path: 'password', name: 'profile.password', component: () => import('@/views/profile/PasswordUpdate') }
    ]
  },
  {
    path: '*', name: 'notfound', component: () => import('@/views/NotFound.vue')
  }
]
const router = new VueRouter({
  mode: 'history',
  base: process.env.BASE_URL,
  routes
})
router.beforeEach((to, from, next) => {
  if (to.matched.some(r => r.meta.admin === true) && store.state.auth.isAdmin !== true) {
    return next(false);
  }
  if (to.matched.some(r => r.meta.auth === true) && store.state.auth.authUser === null) {
    return next({ name: 'auth.login', query: { redirect: to.name } });
  }
  if (to.name === 'auth.login' && store.state.auth.authUser) {
    return next(false);
  }
  next();
})
export default router